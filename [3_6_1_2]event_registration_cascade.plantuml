@startuml event_registration_cascade
autonumber

title ยง3.6.1.2 Event Registration with Cascade (SGP.22 v3.0)
footer \n\nยง3.6.1.2 Event Registration with Cascade (SGP.22 v3.0)\n<:1f4cc:> https://www.linkedin.com/in/allanalfante/
skinparam sequenceMessageAlign center
skinparam ParticipantPadding 20
skinparam BoxPadding 10
skinparam SequenceGroupBorderColor #Navy


'''
'PARTICPANTS
''''
participant "Operator" as operator
database "SM-DP+" as smdp
database "Alt SM-DS" as alt
database "Root SM-DS" as root

'''
'CALL FLOW
''''

  note over operator #Snow
  (1) eid is required if it is not present in ES2+.DownloadOrder
  (2) matchingId must be generated by SM-DP+ for ActivationCodeToken, if not present
  (3) __matchingId must be generated by SM-DP+ used it as EventID, if not present__
  (4) One or both of smdsAddress and rootSmdsAddress SHALL be present

  <#lightblue,#black>|=  Input\n  Parameters  |=  Default\n  SM-DP+  |=  Activation \n  Code  |=  SM-DS  |
  <#white>|  iccid  |  M  |  M  |  M  |
  <#white>|  eid  |  C<sup>1</sup>  |  O  |  C<sup>1</sup>  |
  <#white>|  matchingId  |  M  |  O<sup>2</sup>  |  O<sup>3</sup>  |
  <#white>|  confirmationCode  |  O  |  O  |  O  |
  <#white>|  smdsAddress  |  Not present  |  Not present  |  C<sup>4</sup>  |
  <#white>|  rootSmdsAddress  |  Not present  |  Not present  |  C<sup>4</sup>  |
  <#white>|  releaseFlag  |  M  |  M  |  M  |
  end note

operator -> smdp: Call the <font color=magenta>"ES2+.ConfirmOrder"</font> function
rnote left
POST /gsma/rsp2/es2plus/confirmOrder HTTP/1.1
Host: smdp.example.com
X-Admin-Protocol: gsma/rsp/v3.0.0
Content-Type: application/json;charset=UTF-8
Content-Length: 292

{
  "header": {
    "functionRequesterIdentifier": "RequesterID",
    "functionCallIdentifier": "TX-568"
  },
  "iccid": "8947010000123456784F",
  "eid": "89001567010203040506070809101152",
  "matchingId": "AB3C9-K8H2M-Y1R7P-0Q5ZT",
  "smdsAddress": "sm-ds.example.com",
  "rootSmdsAddress": "root-sm-ds.example.com",
  "releaseFlag": true
}
end note

smdp -> alt: Call the <font color=magenta>"ES12.RegisterEvent"</font> function
rnote left
POST /gsma/rsp2/es12/<font color=magenta>registerEvent</font> HTTP/1.1
Content-Type: application/json

{
  "eid": "1234567890abcdef",
  "rspServerAddress": "smds.example.com",
  **"eventId1"**: "AB3C9-K8H2M-Y1R7P-0Q5ZT",
  **"forwardingIndicator": true**,
  "rootSmdsAddress": "smds.root.example.com",
  "**eventType**": 1,
  "hashedIccids": [
    "0123456789abcdef",
    "fedcba9876543210"
  ],
  "salt": "fedcba9876543210",
  "serviceProviderName": "My Service Provider",
  "operatorId": "base64 encoded operator ID"
}
end note

opt <font color=red>if error</font>
alt --> smdp: error
rnote right 
HTTP/1.1 200 OK

{
  "header": {
    "functionExecutionStatus": {
      "status": "Failed",
      "statusCodeData": {
        "subjectCode": "8.9.5",
        "reasonCode": "3.3",
        "message": "Event Record - Already in use"
      }
    }
  }
}
end note
end

alt -> root: Forward the <font color=magenta>"ES15.RegisterEvent"</font> function
rnote left
POST /gsma/rsp2/es12/<font color=magenta>registerEvent</font> HTTP/1.1
Content-Type: application/json

{
  "eid": "1234567890abcdef",
  "rspServerAddress": "smds.example.com",
  "**eventId2**": "own-event-id",
  "forwardingIndicator": false,
  "eventType": 1,
  "hashedIccids": [
    "0123456789abcdef",
    "fedcba9876543210"
  ],
  "salt": "fedcba9876543210",
  "serviceProviderName": "My Service Provider",
  "operatorId": "base64 encoded operator ID"
}
end note

opt <font color=red>if error</font>
root --> alt: error
rnote right 
HTTP/1.1 200 OK

{
  "header": {
    "functionExecutionStatus": {
      "status": "Failed",
      "statusCodeData": {
        "subjectCode": "8.9",
        "reasonCode": "5.1",
        "message": "SM-DS - Inaccesible"
      }
    }
  }
}
end note
end


root --> alt: Sends <font color=magenta>"ES15.RegisterEvent"</font> response
rnote right 
HTTP/1.1 200 OK

{
  "header": {
    "functionExecutionStatus": {
      "status": "Executed-Success"
    }
  }
}
end note

alt --> smdp: Sends <font color=magenta>"ES12.RegisterEvent"</font> response
rnote right 
HTTP/1.1 200 OK

{
  "header": {
    "functionExecutionStatus": {
      "status": "Executed-Success"
    }
  }
}
end note


smdp --> operator: Sends <font color=magenta>"ES2+.ConfirmOrder"</font> response
rnote right 
HTTP/1.1 200 OK

{
    "header": {
        "functionExecutionStatus": {
            "status": "Executed-Success"
        }
    },
    "eid": "89001567010203040506070809101152",
    "matchingId": "AB3C9-K8H2M-Y1R7P-0Q5ZT",
    "smdpAddress": "smdp.example.com"
}
end note
@enduml